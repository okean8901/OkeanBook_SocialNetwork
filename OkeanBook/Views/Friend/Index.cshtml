@{
    ViewData["Title"] = "Bạn bè";
}

<div class="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900/20 to-slate-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Main Card -->
            <div class="lg:col-span-2">
                <div class="bg-white/10 backdrop-blur-xl rounded-3xl border border-white/20 shadow-2xl overflow-hidden">
                    <!-- Header -->
                    <div class="flex items-center justify-between p-6 border-b border-white/20 bg-gradient-to-r from-purple-500/10 to-blue-500/10">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-2xl flex items-center justify-center">
                                <i class="fas fa-user-friends text-white"></i>
                            </div>
                            <h2 class="text-white font-bold text-xl">Quản lý bạn bè</h2>
                        </div>
                        <!-- Search bar trigger (desktop inline search below) -->
                    </div>

                    <!-- Search -->
                    <div class="p-6 border-b border-white/20">
                        <div class="flex flex-col sm:flex-row gap-3">
                            <div class="relative flex-1">
                                <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                    <i class="fas fa-search text-white/60"></i>
                                </div>
                                <input id="searchInput" type="text" class="w-full bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl pl-12 pr-4 py-3 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-purple-400/50 transition-all" placeholder="Nhập tên hoặc email...">
                            </div>
                            <button id="searchBtn" class="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white px-6 py-3 rounded-2xl font-semibold transition-all duration-300 hover:scale-105 transform shadow-lg">
                                <i class="fas fa-search mr-2"></i>Tìm kiếm
                            </button>
                        </div>
                        <div id="searchResults" class="mt-4 space-y-3"></div>
                    </div>

                    <!-- Tabs -->
                    <div class="px-6 pt-4">
                        <div class="flex space-x-2">
                            <button id="tabFriends" class="tab-btn active px-4 py-2 rounded-2xl text-white bg-gradient-to-r from-purple-600 to-blue-600">
                                Bạn bè <span class="ml-2 bg-white/20 px-2 py-0.5 rounded-full text-xs" id="friendsCount">0</span>
                            </button>
                            <button id="tabRequests" class="tab-btn px-4 py-2 rounded-2xl text-white/80 hover:text-white hover:bg-white/10 border border-white/10">
                                Lời mời <span class="ml-2 bg-white/10 px-2 py-0.5 rounded-full text-xs" id="requestsCount">0</span>
                            </button>
                        </div>
                    </div>

                    <!-- Content -->
                    <div class="p-6">
                        <!-- Friends list -->
                        <div id="friends" class="tab-panel">
                            <div id="friendsList" class="space-y-3">
                                <div class="text-center py-10">
                                    <div class="inline-flex items-center px-4 py-2 rounded-2xl bg-white/10 border border-white/20 text-white/70">
                                        <i class="fas fa-spinner fa-spin mr-2"></i> Đang tải...
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Requests list -->
                        <div id="requests" class="tab-panel hidden">
                            <div id="requestsList" class="space-y-3">
                                <div class="text-center py-10">
                                    <div class="inline-flex items-center px-4 py-2 rounded-2xl bg-white/10 border border-white/20 text-white/70">
                                        <i class="fas fa-spinner fa-spin mr-2"></i> Đang tải...
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stats Card -->
            <div class="lg:col-span-1">
                <div class="bg-white/10 backdrop-blur-xl rounded-3xl border border-white/20 shadow-2xl overflow-hidden">
                    <div class="p-6 border-b border-white/20 bg-gradient-to-r from-purple-500/10 to-blue-500/10">
                        <h3 class="text-white font-bold">Thống kê</h3>
                    </div>
                    <div class="p-6">
                        <div class="grid grid-cols-2 gap-4 text-center">
                            <div class="p-4 rounded-2xl bg-white/5 border border-white/10">
                                <h4 class="text-2xl font-bold text-purple-300" id="totalFriends">0</h4>
                                <p class="text-white/60 text-sm">Bạn bè</p>
                            </div>
                            <div class="p-4 rounded-2xl bg-white/5 border border-white/10">
                                <h4 class="text-2xl font-bold text-yellow-300" id="pendingRequests">0</h4>
                                <p class="text-white/60 text-sm">Lời mời</p>
                            </div>
                        </div>
                        <div class="mt-6">
                            <button id="refreshBtn" class="w-full bg-white/10 hover:bg-white/20 text-white px-6 py-3 rounded-2xl font-semibold transition-all border border-white/20">Làm mới</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tab switching
        const tabFriendsBtn = document.getElementById('tabFriends');
        const tabRequestsBtn = document.getElementById('tabRequests');
        const panelFriends = document.getElementById('friends');
        const panelRequests = document.getElementById('requests');

        function setActiveTab(tab) {
            if (tab === 'friends') {
                tabFriendsBtn.classList.add('bg-gradient-to-r','from-purple-600','to-blue-600','text-white');
                tabFriendsBtn.classList.remove('text-white/80','hover:text-white','hover:bg-white/10','border','border-white/10');
                tabRequestsBtn.classList.remove('bg-gradient-to-r','from-purple-600','to-blue-600','text-white');
                tabRequestsBtn.classList.add('text-white/80','hover:text-white','hover:bg-white/10','border','border-white/10');
                panelFriends.classList.remove('hidden');
                panelRequests.classList.add('hidden');
            } else {
                tabRequestsBtn.classList.add('bg-gradient-to-r','from-purple-600','to-blue-600','text-white');
                tabRequestsBtn.classList.remove('text-white/80','hover:text-white','hover:bg-white/10','border','border-white/10');
                tabFriendsBtn.classList.remove('bg-gradient-to-r','from-purple-600','to-blue-600','text-white');
                tabFriendsBtn.classList.add('text-white/80','hover:text-white','hover:bg-white/10','border','border-white/10');
                panelFriends.classList.add('hidden');
                panelRequests.classList.remove('hidden');
            }
        }

        tabFriendsBtn.addEventListener('click', () => setActiveTab('friends'));
        tabRequestsBtn.addEventListener('click', () => setActiveTab('requests'));

        // Data loading helpers (reusing server HTML like previous jQuery version)
        async function fetchHtml(url) {
            const res = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
            const text = await res.text();
            return new DOMParser().parseFromString(text, 'text/html');
        }

        async function loadFriends() {
            try {
                const doc = await fetchHtml('@Url.Action("Index", "Friend")');
                const html = doc.querySelector('#friendsList')?.innerHTML ?? '';
                document.getElementById('friendsList').innerHTML = html;
                updateFriendsCount();
            } catch (e) { console.error(e); }
        }

        async function loadFriendRequests() {
            try {
                const doc = await fetchHtml('@Url.Action("Index", "Friend")');
                const html = doc.querySelector('#requestsList')?.innerHTML ?? '';
                document.getElementById('requestsList').innerHTML = html;
                updateRequestsCount();
            } catch (e) { console.error(e); }
        }

        // Search
        async function searchUsers() {
            const query = document.getElementById('searchInput').value.trim();
            const results = document.getElementById('searchResults');
            if (!query) {
                results.innerHTML = '<p class="text-white/60">Vui lòng nhập từ khóa tìm kiếm</p>';
                return;
            }
            results.innerHTML = '<div class="text-white/70"><i class="fas fa-spinner fa-spin mr-2"></i>Đang tìm...</div>';
            try {
                const res = await fetch('@Url.Action("Search", "Friend")' + `?query=${encodeURIComponent(query)}`);
                const data = await res.json();
                if (data.success) {
                    displaySearchResults(data.users || []);
                } else {
                    results.innerHTML = `<p class="text-red-400">${data.message || 'Có lỗi xảy ra'}</p>`;
                }
            } catch (e) {
                results.innerHTML = '<p class="text-red-400">Không thể tìm kiếm lúc này</p>';
            }
        }

        function displaySearchResults(users) {
            const results = document.getElementById('searchResults');
            if (!users || users.length === 0) {
                results.innerHTML = '<p class="text-white/60">Không tìm thấy người dùng nào</p>';
                return;
            }
            const items = users.map(user => {
                const statusText = getStatusText(user.status);
                const statusClass = getStatusClass(user.status);
                const actionButton = getActionButton(user.friendStatus, user.id);
                const avatar = user.avatar || '~/img/default-avatar.png';
                return `
                    <div class="flex items-center p-3 rounded-2xl bg-white/5 border border-white/10">
                        <img src="${avatar}" class="w-12 h-12 rounded-xl ring-2 ring-white/20 mr-3" alt="Avatar">
                        <div class="flex-1 min-w-0">
                            <p class="text-white font-semibold truncate">${user.username}</p>
                            <p class="text-white/60 text-sm truncate">${user.email || ''}</p>
                            <p class="${statusClass} text-xs mt-1">${statusText}</p>
                        </div>
                        <div>${actionButton}</div>
                    </div>`;
            }).join('');
            results.innerHTML = items;
        }

        function getStatusText(status) {
            switch(status) {
                case 1: return 'Online';
                case 2: return 'Away';
                case 3: return 'Busy';
                default: return 'Offline';
            }
        }

        function getStatusClass(status) {
            switch(status) {
                case 1: return 'text-green-400';
                case 2: return 'text-yellow-400';
                case 3: return 'text-red-400';
                default: return 'text-white/50';
            }
        }

        function getActionButton(friendStatus, userId) {
            switch(friendStatus) {
                case 'Accepted':
                    return '<span class="px-3 py-1 rounded-xl bg-green-500/20 text-green-300 text-sm">Bạn bè</span>';
                case 'Pending':
                    return '<span class="px-3 py-1 rounded-xl bg-yellow-500/20 text-yellow-300 text-sm">Đã gửi lời mời</span>';
                case 'Blocked':
                    return `<button class="px-4 py-2 rounded-xl border border-red-400/40 text-red-300 hover:bg-red-500/10" onclick="unblockUser('${userId}')">Bỏ chặn</button>`;
                default:
                    return `<button class="px-4 py-2 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 text-white hover:from-purple-700 hover:to-blue-700" onclick="sendFriendRequest('${userId}')">Kết bạn</button>`;
            }
        }

        async function postJson(url, body) {
            const res = await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });
            return res.json();
        }

        async function sendFriendRequest(userId) {
            const response = await postJson('@Url.Action("SendFriendRequest", "Friend")', { friendId: userId });
            if (response.success) { showAlert('success', response.message); searchUsers(); }
            else { showAlert('danger', response.message); }
        }

        async function acceptFriendRequest(friendId) {
            const response = await postJson('@Url.Action("AcceptFriendRequest", "Friend")', { friendId });
            if (response.success) { showAlert('success', response.message); loadFriendRequests(); loadFriends(); }
            else { showAlert('danger', response.message); }
        }

        async function declineFriendRequest(friendId) {
            const response = await postJson('@Url.Action("DeclineFriendRequest", "Friend")', { friendId });
            if (response.success) { showAlert('success', response.message); loadFriendRequests(); }
            else { showAlert('danger', response.message); }
        }

        async function removeFriend(friendId) {
            if (!confirm('Bạn có chắc chắn muốn xóa bạn bè này?')) return;
            const response = await postJson('@Url.Action("RemoveFriend", "Friend")', { friendId });
            if (response.success) { showAlert('success', response.message); loadFriends(); }
            else { showAlert('danger', response.message); }
        }

        async function blockUser(userId) {
            if (!confirm('Bạn có chắc chắn muốn chặn người dùng này?')) return;
            const response = await postJson('@Url.Action("BlockUser", "Friend")', { userId });
            if (response.success) { showAlert('success', response.message); loadFriends(); }
            else { showAlert('danger', response.message); }
        }

        async function unblockUser(userId) {
            const response = await postJson('@Url.Action("UnblockUser", "Friend")', { userId });
            if (response.success) { showAlert('success', response.message); searchUsers(); }
            else { showAlert('danger', response.message); }
        }

        function updateFriendsCount() {
            const count = document.querySelectorAll('#friendsList .friend-item').length;
            document.getElementById('friendsCount').textContent = count;
            document.getElementById('totalFriends').textContent = count;
        }

        function updateRequestsCount() {
            const count = document.querySelectorAll('#requestsList .request-item').length;
            document.getElementById('requestsCount').textContent = count;
            document.getElementById('pendingRequests').textContent = count;
        }

        function showAlert(type, message) {
            // type: success | danger
            const color = type === 'success' ? 'green' : 'red';
            const div = document.createElement('div');
            div.className = `fixed top-4 right-4 z-50 px-4 py-3 rounded-2xl bg-${color}-500 text-white shadow-xl`;
            div.textContent = message;
            document.body.appendChild(div);
            setTimeout(() => div.remove(), 3000);
        }

        // Events
        document.getElementById('searchBtn').addEventListener('click', searchUsers);
        document.getElementById('refreshBtn').addEventListener('click', () => { loadFriends(); loadFriendRequests(); });
        document.addEventListener('DOMContentLoaded', function() {
            setActiveTab('friends');
            loadFriends();
            loadFriendRequests();
        });
    </script>
}
